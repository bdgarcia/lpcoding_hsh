# Generated by Django 2.2.1 on 2019-06-09 13:04

import creditcards.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelos.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre', models.CharField(max_length=30)),
                ('apellido', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('fecha_nacimiento', models.DateField()),
                ('numero_tarjeta', creditcards.models.CardNumberField(max_length=25)),
                ('vencimiento_tarjeta', creditcards.models.CardExpiryField()),
                ('codigo_tarjeta', creditcards.models.SecurityCodeField(max_length=4)),
                ('creditos', models.IntegerField(default=2)),
                ('type', models.CharField(max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Residencia',
            fields=[
                ('codigo', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('ubicacion', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField()),
                ('precio', models.FloatField()),
                ('monto_minimo_subasta', models.FloatField()),
                ('foto', models.FileField(blank=True, default=None, null=True, upload_to=modelos.models.get_file_path)),
                ('borrado_logico', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Variables_sistema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio_usuario_comun', models.FloatField(default=0.0)),
                ('precio_usuario_premium', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Subasta',
            fields=[
                ('monto_actual', models.FloatField(default=0.0)),
                ('monto_inicial', models.FloatField(default=0.0)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('semana_alquila', models.DateField()),
                ('codigo', models.AutoField(primary_key=True, serialize=False)),
                ('codigo_residencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelos.Residencia')),
            ],
        ),
        migrations.CreateModel(
            name='Puja',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.FloatField()),
                ('fecha_y_hora', models.DateTimeField()),
                ('codigo_subasta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelos.Subasta')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Alquila',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('precio', models.FloatField()),
                ('codigo_residencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelos.Residencia')),
                ('email_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
